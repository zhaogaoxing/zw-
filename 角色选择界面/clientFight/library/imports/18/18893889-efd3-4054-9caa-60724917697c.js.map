{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,YAAI,EAAE,QAAQ;;;;;;AAMd,aAAK,EAAG,KAAK;KAChB;;AAEA,kBAAc,EAAG,0BAAU;AACxB,YAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAC;;AACnC,gBAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;SAClC;KACJ;;AAED,qBAAiB,EAAG,6BAAU;AAC1B,YAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAC;;AACrC,gBAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;SACzC;KACJ;;AAGD,aAAS,EAAG,mBAAS,KAAK,EAAC;;AAEvB,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;;AAE9D,YAAG,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,EAAC,OAAO,KAAK,CAAC;;AAE3C,YAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;;AAEtC,YAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAC,OAAO,KAAK,CAAC;AAC9D,eAAO,IAAI,CAAC;KACf;;;AAKD,UAAM,EAAE,kBAAY;;AAEhB,YAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;AAEjD,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAE,CAAC,YAAY,CAAC,WAAW,CAAC;AACxB,iBAAK,EAAE,EAAE,CAAC,aAAa,CAAC,KAAK;AAC7B,uBAAW,EAAE,qBAAS,KAAK,EAAC;AACxB,oBAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC;AAClC,wBAAI,CAAC,cAAc,EAAE,CAAC;iBACzB,MAAI;AACD,4BAAI,CAAC,iBAAiB,EAAE,CAAC;qBAC5B;aACJ;SACJ,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAGb,UAAE,CAAC,YAAY,CAAC,WAAW,CAAC;AACxB,iBAAK,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ;AAC/B,wBAAY,EAAE,sBAAS,OAAO,EAAE,KAAK,EAAE;AACrC,oBAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO;AACtB,oBAAG,OAAO,IAAI,EAAE,CAAC,GAAG,CAAC,SAAS,EAAC;;AAC3B,wBAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AAClE,2BAAO;iBACV;AACD,oBAAI,CAAC,aAAa,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAC9D,EACH;AAAC,YAAI,CAAC,IAAI,CAAC,CAAC;KAChB;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        text: '请输入用户名',\r\n        // userNameInput:{\r\n        //   default: null,\r\n        //   type : cc.Label,\r\n        // },\r\n        \r\n        focus : false,\r\n    },\r\n    \r\n     delPlaceHolder : function(){\r\n        if(this.userNameInput.string[0] == '请'){ //这种方式请不要模仿= =我贪图方便\r\n            this.userNameInput.string = '';       //开头为请就意味着没有输入了 那么我们清空吧\r\n        }\r\n    },\r\n    \r\n    resumePlaceHolder : function(){\r\n        if(this.userNameInput.string.length == 0){ //没有输入  \r\n            this.userNameInput.string = this.text; //我们就将 '请输入用户名' 回显\r\n        }\r\n    },\r\n    \r\n    \r\n    isContain : function(event){\r\n                                    //将鼠标点击的坐标转化为输入框的坐标(输入框左下角为(0,0))\r\n        var point = this.node.convertToNodeSpace(event.getLocation());\r\n                                    //如果x或y 其中一个小于0 那就点在左下角的外面了\r\n        if(point.x < 0 || point.y < 0)return false;\r\n                                    //获取输入框的尺寸 (rect.width,rect.height)\r\n        var rect = this.node.getBoundingBox();\r\n                                    //如果x或y 其中一个大于输入框的宽或高 那就点在右上角外面了\r\n        if(point.x > rect.width || point.y > rect.height)return false;\r\n        return true;                //排除上述情况就点在输入框上了\r\n    },\r\n    \r\n   \r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this.userNameInput = this.getComponent(cc.Label);\r\n\r\n        let self = this;\r\n        cc.eventManager.addListener({       \r\n            event: cc.EventListener.MOUSE,  //这个听鼠标的点击 看有没被选中 \r\n            onMouseDown: function(event){\r\n                if(self.focus = self.isContain(event)){\r\n                    self.delPlaceHolder();  //清空 '请输入用户名' 判断在函数里完成\r\n                }else{\r\n                    self.resumePlaceHolder(); //恢复 '请输入用户名' 判断在函数里完成\r\n                }\r\n            }\r\n        },self.node);\r\n        \r\n      \r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD, //这个听输入的是什么\r\n             onKeyPressed: function(keyCode, event) {\r\n               if(!self.focus) return;        //如果该输入框没有被选中 就不管了\r\n                if(keyCode == cc.KEY.backspace){ //如果输进来的是删除键\r\n                    self.userNameInput.string = self.userNameInput.string.slice(0,-1); //那么我们就把最后一个删掉\r\n                    return;                                 // ↑ slice(开始位置,结束位置) 负号表示从后往前数\r\n                }\r\n                self.userNameInput.string += String.fromCharCode(keyCode); //如果你其他的输入我们就拼到输入框\r\n           },                            //   ↑  这个是javascript内置对象 fromCharCode可以将ascii->字符\r\n        },self.node);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}