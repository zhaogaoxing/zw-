{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;KAUX;;AAED,QAAI,EAAE,cAAS,QAAQ,EAAC;;;;;;AACpB,iCAAgB,QAAQ;oBAAhB,IAAI;;AACR,qBAAI,IAAI,IAAI,IAAI,IAAI,EAAC;AACjB,2BAAO,CAAC,GAAG,CAAC,IAAI,GAAE,GAAG,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrC;aAAA;;;;;;;;;;;;;;;;;;;;;AASL,aAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC;AAChD,gBAAI,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnC,gBAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;;AAGzC,yBAAa,CAAC,cAAc,CAAC,YAAY,IAAE,KAAK,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;AAC9G,yBAAa,CAAC,cAAc,CAAC,aAAa,IAAE,KAAK,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;AAChH,yBAAa,CAAC,cAAc,CAAC,cAAc,IAAE,KAAK,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;AAClH,yBAAa,CAAC,cAAc,CAAC,cAAc,IAAE,KAAK,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;;AAElH,yBAAa,CAAC,cAAc,CAAC,eAAe,IAAE,KAAK,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;AACxH,yBAAa,CAAC,cAAc,CAAC,eAAe,IAAE,KAAK,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;SAC3H;KAEJ;;AAED,QAAI,EAAE,gBAAU;AACZ,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;KAC3C;;;AAGD,UAAM,EAAE,kBAAY;;AAEhB,YAAI,CAAC,IAAI,EAAE,CAAC;;AAEZ,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAC,UAAS,QAAQ,EAAC;AAC5C,gBAAG,QAAQ,EAAC;AACR,uBAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACzB,MAAI;AACD,uBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACvB;AACD,gBAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvB,CAAC,CAAC;;AAEH,cAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACpC;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n    \r\n    show: function(heroInfo){\r\n        for(var line of heroInfo)\r\n            for(var item in line){\r\n                console.log(item +' '+line[item]);\r\n            }\r\n            \r\n        // for(var item of this.children){\r\n        //     var subChild = item.getChildren();\r\n        //     for(var item2 of subChild){\r\n        //         console.log(item2);\r\n        //     }\r\n        // }\r\n        \r\n        for(var index = 0; index < heroInfo.length; index++){\r\n            var heroInfoItem = heroInfo[index];\r\n            var childInfoItem = this.children[index];\r\n            //console.log(childInfoItem['heroName_0'+(index+1)]);\r\n            \r\n            childInfoItem.getChildByName('heroName_0'+(index+1)).getComponent(cc.Label).string = heroInfoItem['heroName'];\r\n            childInfoItem.getChildByName('heroLevel_0'+(index+1)).getComponent(cc.Label).string = heroInfoItem['heroLevel'];\r\n            childInfoItem.getChildByName('profession_0'+(index+1)).getComponent(cc.Label).string = heroInfoItem['profession'];\r\n            childInfoItem.getChildByName('loginTimes_0'+(index+1)).getComponent(cc.Label).string = heroInfoItem['loginTimes'];\r\n            \r\n            childInfoItem.getChildByName('heroTexture_0'+(index+1)).getComponent('myHeroTexture').show(heroInfoItem['heroTexture']);\r\n            childInfoItem.getChildByName('headTexture_0'+(index+1)).getComponent('myHeadTexture').show(heroInfoItem['headTexture']);\r\n        }\r\n            \r\n    },\r\n    \r\n    init: function(){\r\n        this.children = this.node.getChildren();\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this.init();\r\n        \r\n        let self = this;\r\n        \r\n        window.socket.on('heroChoose',function(heroInfo){\r\n            if(heroInfo){\r\n                console.log(heroInfo);\r\n            }else{\r\n                console.log('none');\r\n            }\r\n            self.show(heroInfo);\r\n        });\r\n        \r\n        window.socket.emit('heroChoose');\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}